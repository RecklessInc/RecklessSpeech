# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the Wpf project, runs unit tests, then saves the MSIX build artifact.
name:  Wpf Continuous Integration

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x64]

    runs-on: windows-latest

    env:
      App_Packages_Directory: AppPackages
      SigningCertificate: GitHubActionsDemo.pfx
      Solution_Path: RecklessSpeech.sln
      Test_Project_Path: RecklessSpeech.Front.Tests\RecklessSpeech.Front.Tests.csproj
      Wpf_Project_Path: RecklessSpeech.Front.WPF.App\RecklessSpeech.Front.WPF.App.csproj
      Wap_Project_Directory: RecklessSpeech.Packaging
      Wap_Project_Name: RecklessSpeech.Packaging.wapproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: aarnott/nbgv@v0.3
      with:
        setAllVars: true

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Update the version before build
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\$env:Wap_Project_Directory\Package.appxmanifest"
        $manifest.Package.Identity.Version = "$env:NBGV_SimpleVersion.0"
        $manifest.save(".\$env:Wap_Project_Directory\Package.appxmanifest")

    # Test
    - name: Execute Unit Tests
      run: dotnet test $env:Test_Project_Path
